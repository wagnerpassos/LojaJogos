package br.wagnerpassos.visao;

import br.wagnerpassos.modelo.bean.Torneio;
import br.wagnerpassos.modelo.dao.TorneioDAO;
import br.wagnerpassos.modelo.validador.Validador;
import br.wagnerpassos.swing.util.ImpressoraSwing;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author wagne
 */
public class FormularioTorneio extends javax.swing.JDialog {
    TorneioDAO torneioDAO = new TorneioDAO();
    Integer linhaAtual = null;
    
    public void atualizaTabela(){
        listaTorneios.clear();
        listaTorneios.addAll(torneioDAO.read());
        int linha;
        if(linhaAtual != null)
            linha = linhaAtual;
        else
            linha = listaTorneios.size() - 1;
        if(linha >= 0){
            tabelaTorneios.setRowSelectionInterval(linha, linha);
            tabelaTorneios.scrollRectToVisible(
            tabelaTorneios.getCellRect(linha, linha, true));
        }
        linhaAtual = null;
    }
    
    public void atualizaTabela(String busca){
        listaTorneios.clear();
        listaTorneios.addAll(torneioDAO.read());
        
        for(Iterator<Torneio> iter = listaTorneios.listIterator(); iter.hasNext();){
            Torneio torneio = iter.next();
            if(!torneio.getNome().toLowerCase().contains(busca.toLowerCase()))
                iter.remove();
        }
        int linha = listaTorneios.size() - 1;
        if(linha >= 0){
            tabelaTorneios.setRowSelectionInterval(linha, linha);
            tabelaTorneios.scrollRectToVisible(
            tabelaTorneios.getCellRect(linha, linha, true));
        }
    }
    
    private void trataEdicao(boolean editando){
        botaoCancelar.setEnabled(editando);
        botaoSalvar.setEnabled(editando);
        botaoExcluir.setEnabled(!editando);
        botaoEditar.setEnabled(!editando);
        botaoNovo.setEnabled(!editando);
        botaoFechar.setEnabled(!editando);
        botaoPrimeiro.setEnabled(!editando);
        botaoProximo.setEnabled(!editando);
        botaoAnterior.setEnabled(!editando);
        botaoUltimo.setEnabled(!editando);
        txtNome.setEditable(editando);
        txtNivel.setEditable(editando);
        txtData.setEditable(editando);
        txtHorario.setEditable(editando);
        txtValor.setEditable(editando);
        txtDescricao.setEnabled(editando);
        dropJogo.setEnabled(editando);
    }
    
    public boolean validadorSwing(Torneio torneio){
        Validador validador = new Validador();
        List<String> erros = validador.validarTorneio(torneio);
        if(erros.size() > 0)
            ImpressoraSwing.getInstance().impressoraJOP(erros);
        return validador.validarTorneio(torneio).size() <= 0;
    }
    
    /**
     * Creates new form FormularioJogador
     */
    public FormularioTorneio(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        atualizaTabela();
        trataEdicao(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        listaTorneios = org.jdesktop.observablecollections.ObservableCollections.observableList(new ArrayList<Torneio>());
        conversorData = new br.wagnerpassos.swing.util.ConverterData();
        conversorHora = new br.wagnerpassos.swing.util.ConverterHora();
        conversorDouble = new br.wagnerpassos.swing.util.ConverterDouble();
        painelNavegacao = new javax.swing.JPanel();
        botaoPrimeiro = new javax.swing.JButton();
        botaoAnterior = new javax.swing.JButton();
        botaoProximo = new javax.swing.JButton();
        botaoUltimo = new javax.swing.JButton();
        botaoFechar = new javax.swing.JButton();
        abas = new javax.swing.JTabbedPane();
        listagem = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaTorneios = new javax.swing.JTable();
        dados = new javax.swing.JPanel();
        painelAcoes = new javax.swing.JPanel();
        botaoNovo = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        botaoSalvar = new javax.swing.JButton();
        botaoCancelar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        lCodigo = new javax.swing.JLabel();
        lNome = new javax.swing.JLabel();
        lNivel = new javax.swing.JLabel();
        lJogo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNome = new javax.swing.JTextField();
        txtNivel = new javax.swing.JTextField();
        lHorario = new javax.swing.JLabel();
        lData = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        lValor = new javax.swing.JLabel();
        dropJogo = new javax.swing.JComboBox<>();
        txtValor = new javax.swing.JFormattedTextField();
        javax.swing.text.MaskFormatter maskData = null;
        try{
            maskData = new javax.swing.text.MaskFormatter("##/##/####");
            maskData.setPlaceholder("_");
        } catch(Exception e){
        }
        txtData = new javax.swing.JFormattedTextField(maskData);
        javax.swing.text.MaskFormatter maskHora = null;
        try{
            maskHora = new javax.swing.text.MaskFormatter("##:##");
            maskHora.setPlaceholder("_");
        } catch(Exception e){
        }
        txtHorario = new javax.swing.JFormattedTextField(maskHora);
        painelBusca = new javax.swing.JPanel();
        txtBusca = new javax.swing.JTextField();
        txtPesquisaNome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        painelNavegacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Painel de navegação - Torneio"));
        painelNavegacao.setLayout(new java.awt.GridLayout(1, 0));

        botaoPrimeiro.setText("Primeiro");
        botaoPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPrimeiroActionPerformed(evt);
            }
        });
        painelNavegacao.add(botaoPrimeiro);

        botaoAnterior.setText("Anterior");
        botaoAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAnteriorActionPerformed(evt);
            }
        });
        painelNavegacao.add(botaoAnterior);

        botaoProximo.setText("Próximo");
        botaoProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProximoActionPerformed(evt);
            }
        });
        painelNavegacao.add(botaoProximo);

        botaoUltimo.setText("Ultimo");
        botaoUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoUltimoActionPerformed(evt);
            }
        });
        painelNavegacao.add(botaoUltimo);

        botaoFechar.setText("Fechar");
        botaoFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFecharActionPerformed(evt);
            }
        });
        painelNavegacao.add(botaoFechar);

        getContentPane().add(painelNavegacao, java.awt.BorderLayout.NORTH);
        painelNavegacao.getAccessibleContext().setAccessibleName("");
        painelNavegacao.getAccessibleContext().setAccessibleDescription("");

        listagem.setLayout(new java.awt.BorderLayout());

        tabelaTorneios.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listaTorneios, tabelaTorneios);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nivel}"));
        columnBinding.setColumnName("Nivel");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${jogo}"));
        columnBinding.setColumnName("Jogo");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataFormatada}"));
        columnBinding.setColumnName("Data Formatada");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horaFormatada}"));
        columnBinding.setColumnName("Hora Formatada");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valorFormatado}"));
        columnBinding.setColumnName("Valor Formatado");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tabelaTorneios);
        if (tabelaTorneios.getColumnModel().getColumnCount() > 0) {
            tabelaTorneios.getColumnModel().getColumn(0).setMaxWidth(40);
            tabelaTorneios.getColumnModel().getColumn(1).setMinWidth(130);
            tabelaTorneios.getColumnModel().getColumn(2).setPreferredWidth(140);
            tabelaTorneios.getColumnModel().getColumn(2).setMaxWidth(150);
            tabelaTorneios.getColumnModel().getColumn(4).setMinWidth(50);
            tabelaTorneios.getColumnModel().getColumn(4).setMaxWidth(75);
        }

        listagem.add(jScrollPane1, java.awt.BorderLayout.PAGE_START);

        abas.addTab("Lista de Torneios", listagem);

        painelAcoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Painel de ações - Torneio"));
        painelAcoes.setLayout(new java.awt.GridLayout(1, 0));

        botaoNovo.setText("Novo");
        botaoNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoNovoActionPerformed(evt);
            }
        });
        painelAcoes.add(botaoNovo);

        botaoEditar.setText("Editar");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });
        painelAcoes.add(botaoEditar);

        botaoSalvar.setBackground(new java.awt.Color(204, 255, 204));
        botaoSalvar.setText("Salvar");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });
        painelAcoes.add(botaoSalvar);

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });
        painelAcoes.add(botaoCancelar);

        botaoExcluir.setBackground(new java.awt.Color(255, 204, 204));
        botaoExcluir.setText("Excluir");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });
        painelAcoes.add(botaoExcluir);

        lCodigo.setText("Código:");

        lNome.setText("Nome:");

        lNivel.setText("Nível:");

        lJogo.setText("Jogo:");

        txtCodigo.setEditable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.id}"), txtCodigo, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nome}"), txtNome, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nivel}"), txtNivel, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        lHorario.setText("Horário:");

        lData.setText("Data:");

        jLabel1.setText("Descrição:");

        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.descricao}"), txtDescricao, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(txtDescricao);

        lValor.setText("Valor:");

        dropJogo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yu-Gi-Oh", "Magic TCG", "Pokemon TCG" }));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.jogo}"), dropJogo, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.valor}"), txtValor, org.jdesktop.beansbinding.BeanProperty.create("value"));
        binding.setConverter(conversorDouble);
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.dataTorneio}"), txtData, org.jdesktop.beansbinding.BeanProperty.create("value"));
        binding.setConverter(conversorData);
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tabelaTorneios, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.horario}"), txtHorario, org.jdesktop.beansbinding.BeanProperty.create("value"));
        binding.setConverter(conversorHora);
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout dadosLayout = new javax.swing.GroupLayout(dados);
        dados.setLayout(dadosLayout);
        dadosLayout.setHorizontalGroup(
            dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelAcoes, javax.swing.GroupLayout.DEFAULT_SIZE, 762, Short.MAX_VALUE)
            .addGroup(dadosLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lCodigo)
                            .addComponent(lNome)
                            .addComponent(lNivel))
                        .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(txtNivel))
                        .addGap(28, 28, 28)
                        .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lData)
                            .addComponent(lHorario))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addComponent(lJogo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dropJogo, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lValor)))
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dadosLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dadosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(270, 270, 270))
            .addGroup(dadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dadosLayout.setVerticalGroup(
            dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dadosLayout.createSequentialGroup()
                .addComponent(painelAcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lHorario))
                .addGap(18, 18, 18)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lNivel)
                    .addComponent(txtNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lData)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lJogo)
                    .addComponent(dropJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lValor))
                .addGap(18, 18, 18)
                .addGroup(dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        abas.addTab("Dados", dados);

        getContentPane().add(abas, java.awt.BorderLayout.CENTER);

        txtBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaActionPerformed(evt);
            }
        });
        txtBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscaKeyTyped(evt);
            }
        });

        txtPesquisaNome.setText("Buscar por [NOME]");

        javax.swing.GroupLayout painelBuscaLayout = new javax.swing.GroupLayout(painelBusca);
        painelBusca.setLayout(painelBuscaLayout);
        painelBuscaLayout.setHorizontalGroup(
            painelBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPesquisaNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(447, Short.MAX_VALUE))
        );
        painelBuscaLayout.setVerticalGroup(
            painelBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBuscaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelBuscaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisaNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(painelBusca, java.awt.BorderLayout.SOUTH);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFecharActionPerformed
        dispose();
    }//GEN-LAST:event_botaoFecharActionPerformed

    private void botaoPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPrimeiroActionPerformed
        tabelaTorneios.setRowSelectionInterval(0, 0);
        tabelaTorneios.scrollRectToVisible(tabelaTorneios.getCellRect(0, 0, true));
    }//GEN-LAST:event_botaoPrimeiroActionPerformed

    private void botaoAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAnteriorActionPerformed
        int linha = tabelaTorneios.getSelectedRow();
        if(linha - 1 >= 0)
            linha--;
        tabelaTorneios.setRowSelectionInterval(linha, linha);
        tabelaTorneios.scrollRectToVisible(tabelaTorneios.getCellRect(linha, 0, true));
    }//GEN-LAST:event_botaoAnteriorActionPerformed

    private void botaoProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProximoActionPerformed
        int linha = tabelaTorneios.getSelectedRow();
        if(linha + 1 <= tabelaTorneios.getRowCount() -1)
            linha++;
        tabelaTorneios.setRowSelectionInterval(linha, linha);
        tabelaTorneios.scrollRectToVisible(tabelaTorneios.getCellRect(linha, 0, true));
    }//GEN-LAST:event_botaoProximoActionPerformed

    private void botaoUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoUltimoActionPerformed
        int linha = tabelaTorneios.getRowCount() -1;
        tabelaTorneios.setRowSelectionInterval(linha, linha);
        tabelaTorneios.scrollRectToVisible(tabelaTorneios.getCellRect(linha, 0, true));
    }//GEN-LAST:event_botaoUltimoActionPerformed

    private void txtBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyPressed
        
    }//GEN-LAST:event_txtBuscaKeyPressed

    private void txtBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaActionPerformed
        
    }//GEN-LAST:event_txtBuscaActionPerformed

    private void txtBuscaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyTyped

    }//GEN-LAST:event_txtBuscaKeyTyped

    private void txtBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyReleased
        String texto = txtBusca.getText();
        atualizaTabela(texto);
    }//GEN-LAST:event_txtBuscaKeyReleased

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        int linhaSelecionada = tabelaTorneios.getSelectedRow();
        Torneio torneio = listaTorneios.get(linhaSelecionada);
        switch(ImpressoraSwing.getInstance().impressoraConfirmacao("Confirma a operação de exclusão?")){
            case JOptionPane.YES_OPTION:
                if(validadorSwing(torneio)){
                    torneioDAO.delete(torneio.getId());
                    atualizaTabela();
                }
                break;
        }
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        trataEdicao(false);
        atualizaTabela();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        int linhaSelecionada = tabelaTorneios.getSelectedRow();
        linhaAtual = linhaSelecionada;
        Torneio torneio = listaTorneios.get(linhaSelecionada);
        switch(ImpressoraSwing.getInstance().impressoraConfirmacao("Confirma a operação de persistência?")){
            case JOptionPane.YES_OPTION:
                if(validadorSwing(torneio)){
                    torneioDAO.save(torneio);
                    trataEdicao(false);
                    atualizaTabela();
                }
                break;
            case JOptionPane.NO_OPTION:
                trataEdicao(true);
                break;
        }
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        trataEdicao(true);
        txtNome.requestFocus();
    }//GEN-LAST:event_botaoEditarActionPerformed

    private void botaoNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoNovoActionPerformed
        listaTorneios.add((Torneio) new Torneio());
        int linha = listaTorneios.size() - 1;
        tabelaTorneios.setRowSelectionInterval(linha, linha);
        trataEdicao(true);
        txtNome.requestFocus();
    }//GEN-LAST:event_botaoNovoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioTorneio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioTorneio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioTorneio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioTorneio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormularioTorneio dialog = new FormularioTorneio(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane abas;
    private javax.swing.JButton botaoAnterior;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoFechar;
    private javax.swing.JButton botaoNovo;
    private javax.swing.JButton botaoPrimeiro;
    private javax.swing.JButton botaoProximo;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JButton botaoUltimo;
    private br.wagnerpassos.swing.util.ConverterData conversorData;
    private br.wagnerpassos.swing.util.ConverterDouble conversorDouble;
    private br.wagnerpassos.swing.util.ConverterHora conversorHora;
    private javax.swing.JPanel dados;
    private javax.swing.JComboBox<String> dropJogo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lCodigo;
    private javax.swing.JLabel lData;
    private javax.swing.JLabel lHorario;
    private javax.swing.JLabel lJogo;
    private javax.swing.JLabel lNivel;
    private javax.swing.JLabel lNome;
    private javax.swing.JLabel lValor;
    private java.util.List<Torneio> listaTorneios;
    private javax.swing.JPanel listagem;
    private javax.swing.JPanel painelAcoes;
    private javax.swing.JPanel painelBusca;
    private javax.swing.JPanel painelNavegacao;
    private javax.swing.JTable tabelaTorneios;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JFormattedTextField txtHorario;
    private javax.swing.JTextField txtNivel;
    private javax.swing.JTextField txtNome;
    private javax.swing.JLabel txtPesquisaNome;
    private javax.swing.JFormattedTextField txtValor;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
